//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public WinConditionComponent winCondition { get { return (WinConditionComponent)GetComponent(GameComponentsLookup.WinCondition); } }
    public bool hasWinCondition { get { return HasComponent(GameComponentsLookup.WinCondition); } }

    public void AddWinCondition(int newPadsTouchedCount) {
        var index = GameComponentsLookup.WinCondition;
        var component = (WinConditionComponent)CreateComponent(index, typeof(WinConditionComponent));
        component.padsTouchedCount = newPadsTouchedCount;
        AddComponent(index, component);
    }

    public void ReplaceWinCondition(int newPadsTouchedCount) {
        var index = GameComponentsLookup.WinCondition;
        var component = (WinConditionComponent)CreateComponent(index, typeof(WinConditionComponent));
        component.padsTouchedCount = newPadsTouchedCount;
        ReplaceComponent(index, component);
    }

    public void RemoveWinCondition() {
        RemoveComponent(GameComponentsLookup.WinCondition);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherWinCondition;

    public static Entitas.IMatcher<GameEntity> WinCondition {
        get {
            if (_matcherWinCondition == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.WinCondition);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherWinCondition = matcher;
            }

            return _matcherWinCondition;
        }
    }
}
